[project]
name = "winregistry"
version = "0.0.0"
description = "A Python library for interacting with the Windows registry"
authors = [
    {name = "Aleksandr Shpak", email = "shpaker@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["windows", "registry", "regedit", "winreg"]
classifiers = [
    'Programming Language :: Python',
    'Framework :: Robot Framework :: Library',
    'Operating System :: Microsoft :: Windows',
]

dependencies = [
    "ruff>=0.3.0",
]

[project.optional-dependencies]
dev = [
    "robotframework>=6.1.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py38"
line-length = 120
exclude = [
    ".venv",
    ".git",
    ".ruff_cache",
    "build",
    "dist",
]
lint.ignore = [
    "A001",     # Function argument `type` is shadowing a Python builtin
    "A002",     # Function argument `type` is shadowing a Python builtin
    "PLR0913",  # Too many arguments to function call
    "RUF001",   # Docstring contains ambiguous chars
    "RUF002",   # Docstring contains ambiguous chars
    "RUF003",   # Docstring contains ambiguous chars
    "RUF012",   # Mutable class attributes should be annotated with `typing.ClassVar`
]
lint.select = [
    "F",    # Pyflakes
    "C90",  # mccabe
    "E501", # line too long
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "YTT",  # flake8-2020
    "S",    # flake8-bandit
    "BLE",  # flake8-blind-except
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "T10",  # flake8-debugger
    "EM",   # flake8-errmsg
    "EXE",  # flake8-executable
    "FA",   # flake8-future-annotations
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "G",    # flake8-logging-format
    "INP",  # flake8-no-pep420
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "SLOT", # flake8-slots
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "INT",  # flake8-gettext
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "TD",   # flake8-todos
    "FIX",  # flake8-fixme
    "ERA",  # eradicate
    "PGH",  # pygrep-hooks
    "PL",   # Pylint
    "TRY",  # tryceratops
    "FLY",  # flynt
    "PERF", # Perflint
    "FURB", # refurb
    "LOG",  # flake8-logging
    "RUF",  # Ruff-specific rules
]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
